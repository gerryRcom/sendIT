#!/usr/bin/env ansible-playbook
---
- name: Build sendIT and push to VM
  hosts: all
  become: true
  gather_facts: false

  vars:
    sendit_path: /opt/sendit
    sendit_binary: ~/github/sendIT/sendIT

  tasks:

  # Build the latest version of sendIT
  - name: Build sendIT on local machine
    become: no
    local_action: command /usr/local/go/bin/go build -C ~/github/sendIT

  - name: Create application directory
    file:
      path: "{{ sendit_path }}"
      state: directory
      mode: '0750'

  - name: Copy binary to server
    copy:
      src: "{{ sendit_binary }}"
      dest: "{{ sendit_path }}"
      mode: '0700'

  - name: Ensure UFW is installed
    package:
      name: ufw
      update_cache: true

  # Reset UFW config to ensure only desired addresses are whitelisted.
  - name: Reset UFW
    ufw:
      state: reset

  # Set the default policy to allow only ssh access and enable the UFW service.
  - name: Enable UFW with required default setting
    ufw:
      rule: allow
      port: 22
      proto: tcp
      state: enabled
      policy: deny

  # Open up sendIT port to approved addresses only.
  - name: Allow access to sendIT from specific locations
    ufw:
     rule: allow
     port: 8080
     proto: tcp
     from_ip: '{{ item }}'
    with_items:
      - 192.168.50.33
      - 192.168.50.137

  # Create sendIT systemd service config
  - name: Configure sendIT Service
    template:
      src: sendit.service.j2
      dest: /etc/systemd/system/sendit.service
      mode: '0644'

  # Start sendIT service and ensure it survives reboots. Reload to accept any new config.
  - name: Start sendIT service
    systemd:
      daemon_reload: true
      service: sendit
      state: restarted
      enabled: true

...